//package task
//
//import (
//	"context"
//	"encoding/json"
//	"errors"
//	"fmt"
//	"net/http"
//	"os"
//	"time"
//
//	twitterscraper "github.com/n0madic/twitter-scraper"
//)
//
//type TwitterMonitor struct {
//	Scraper   *twitterscraper.Scraper
//	Usernames []string
//}
//
//func NewTwitterMonitor(cookiesFile string, usernames []string) (*TwitterMonitor, error) {
//	scraper := twitterscraper.New()
//	//  设置 proxy
//	err := scraper.SetProxy("http://localhost:7890")
//	if err != nil {
//		panic(err)
//	}
//
//	scraper.WithDelay(10)
//
//	// 设置 cookies
//	f, err := os.Open(cookiesFile)
//	if err != nil {
//		panic(err)
//	}
//	// deserialize from JSON
//	var cookies []*http.Cookie
//	json.NewDecoder(f).Decode(&cookies)
//	fmt.Println(cookies)
//	// load cookies
//	scraper.SetCookies(cookies)
//	// check login status
//
//	if scraper.IsLoggedIn() != true {
//		return nil, errors.New("登录推特失败")
//	}
//
//	return &TwitterMonitor{
//		Scraper:   scraper,
//		Usernames: usernames,
//	}, nil
//}
//
//func (tm *TwitterMonitor) Start() {
//	ticker := time.NewTicker(10 * time.Second)
//	go func() {
//		for range ticker.C {
//			for _, username := range tm.Usernames {
//				tweets := tm.Scraper.GetTweets(context.Background(), username, 1)
//				for tweet := range tweets {
//					if tweet.Error != nil {
//						fmt.Printf("推文错误: %v\n", tweet.Error)
//						continue
//					}
//					fmt.Printf("新推文来自 %s: %s\n", username, tweet.Text)
//				}
//			}
//		}
//	}()
//}
